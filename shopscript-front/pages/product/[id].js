import Button from "@/components/Button";
import { CartContext } from "@/components/CartContext";
import Center from "@/components/Center";
import Header from "@/components/Header";
import ProductImages from "@/components/ProductImages";
import { mongooseCoonect } from "@/lib/mongoose";
import { Product } from "@/models/ProductSchema";
import { Box } from "@/styles/CartStyles";
import Head from "next/head";
import { useContext } from "react";
import { FaOpencart } from "react-icons/fa";
import { styled } from "styled-components";

const Title = styled.h1`
  font-size: 3rem;
  font-weight: 700;
`;

const ColWrapper = styled.div`
  display: grid;
  grid-template-columns: 1.2fr 0.8fr;
  gap: 40px;
  margin-top: 40px;
`;

const StyledP = styled.p`
  font-size: 20px;
  line-height: 2rem;
`;

const PriceRow = styled.div`
  display: flex;
  gap: 40px;
  margin-top: 40px;
  align-items: center;
`;

const PriceTag = styled.span`
  font-size: 2rem;
`;

const Cart = styled(FaOpencart)`
  margin-right: 20px;
  font-size: 1.7rem;
`;

export default function ProductPage({ product }) {
  const { addProduct } = useContext(CartContext);

  const formatter = new Intl.NumberFormat("en-IN");
  const formattedPrice = formatter.format(product.price);
  return (
    <>
      <Head>
        <title>ShopScript : {product.title}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <Center>
        <ColWrapper>
          <Box>
            <ProductImages images={product?.images} alt="..." />
          </Box>
          <div>
            <Title>{product.title}</Title>
            <StyledP> {product.description}</StyledP>
            <PriceRow>
              <PriceTag>&#x20b9; {formattedPrice} /-</PriceTag>
              <Button onClick={() => {addProduct(product._id)}} dark size={"l"}>
                <Cart /> Add To Card
              </Button>
            </PriceRow>
          </div>
        </ColWrapper>
      </Center>
    </>
  );
}

export async function getServerSideProps(context) {
  await mongooseCoonect();
  const { id } = context.query;
  const products = JSON.parse(
    JSON.stringify(await Product.findById({ _id: id }))
  );
  return {
    props: {
      product: products,
    },
  };
}
